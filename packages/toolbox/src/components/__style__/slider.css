:root {
    --slider-state-size: 40px;
    --slider-handle-size: 20px;
    --slider-tick-size: 2px;

    --slider-track-height: 4px;
    --slider-track-color: rgb(var(--palette-grey-300));

    --slider-label-size: 28px;
    --slider-label-font-size: 12px;
    --slider-label-line-height: 14px;
}

.slider {
    position: relative;
    width: 100%;
    height: var(--slider-state-size);
    cursor: pointer;
}

.track,
.indicator {
    position: absolute;
    top: calc((var(--slider-state-size) - var(--slider-track-height)) / 2);
    left: calc(var(--slider-state-size) / 2);
    right: calc(var(--slider-state-size) / 2);
    height: var(--slider-track-height);
}

.track {
    background-color: var(--slider-track-color);
}

.indicator {
    position: relative;
    background-color: var(--input-on-main-color);
}

.ticks {
    position: absolute;
    top: calc((var(--slider-state-size) - var(--slider-tick-size)) / 2);
    left: calc(var(--slider-state-size) / 2 - var(--slider-tick-size) / 2);
    right: calc(var(--slider-state-size) / 2 - var(--slider-tick-size) / 2);
    height: var(--slider-tick-size);
    display: flex;
    pointer-events: none;
    justify-content: space-between;
}

.tick {
    flex: 0 0 auto;
    height: var(--slider-tick-size);
    width: var(--slider-tick-size);
    border-radius: 50%;
    background-color: var(--input-on-main-color);
}

.tick--active {
    background-color: var(--slider-track-color);
}

.state {
    position: absolute;
    top: 0;
    left: 0;
    width: var(--slider-state-size);
    height: var(--slider-state-size);
    border-radius: 50%;
    transition: background-color var(--animation-duration) var(--animation-curve-default) 0s;
    transform-origin: center center;
    transform: translateX(0px);
    color: var(--input-state-color);
}

.handle {
    position: absolute;
    top: calc(var(--slider-state-size) / 2 - var(--slider-handle-size) / 2);
    left: calc(var(--slider-state-size) / 2 - var(--slider-handle-size) / 2);
    background-color: var(--input-on-main-color);
    width: var(--slider-handle-size);
    height: var(--slider-handle-size);
    border-radius: 50%;
    transition: transform 0.1s var(--animation-curve-default);
}

.slider:active:not(.slider--disabled) .handle {
    transform: scale(1.25);
}

.slider:hover .state {
    background-color: var(--input-state-hover-color);
}

.slider--labeled {
    & .indicator::before,
    & .indicator::after {
        position: absolute;
        bottom: 0;
        right: calc(-0.5 * var(--slider-label-size));
        width: var(--slider-label-size);
        height: var(--slider-label-size);
        transition: transform var(--animation-duration-short) var(--animation-curve-default);
        z-index: var(--z-index-higher);
    }

    & .indicator::before {
        content: "";
        background-color: var(--input-on-main-color);
        border-radius: 50% 50% 50% 0;
        transform: rotate(-45deg) scale(0) translate(0);
    }

    & .indicator::after {
        content: attr(data-value);
        color: var(--input-on-secondary-color);
        font-size: var(--slider-label-font-size);
        line-height: var(--slider-label-line-height);
        font-weight: 500;
        text-align: center;
        transform: scale(0) translate(0);
    }
}

.slider--labeled:hover,
.slider--labeled:active {
    & .indicator::before {
        transform: rotate(-45deg) scale(1)
            translate(calc(0.8 * var(--slider-handle-size)), calc(-0.8 * var(--slider-handle-size)));
        transition-delay: 0.1s;
    }

    & .indicator::after {
        transform: scale(1) translate(0, calc(-0.8 * var(--slider-handle-size)));
        transition-delay: 0.1s;
    }
}

.slider.slider--disabled {
    pointer-events: none;

    & .indicator,
    & .handle,
    & .tick:not(.tick--active) {
        background-color: var(--input-disabled-color);
    }

    & .state {
        background-color: transparent;
    }
}

.state:focus {
    animation-name: focus;
    animation-duration: var(--animation-duration);
    animation-timing-function: var(--animation-curve-focus-ring);
    outline: var(--focus-ring-width) solid var(--focus-ring-color);
}

@keyframes focus {
    0% {
        outline-width: 0px;
    }
    50% {
        outline-width: calc(2 * var(--focus-ring-width));
    }
    100% {
        outline-width: var(--focus-ring-width);
    }
}
